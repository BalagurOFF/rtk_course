Index: RTK_study/contentmanagment/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.core.paginator import Paginator\r\nfrom django.db.models import F, CharField\r\nfrom django.db.models.functions import Concat\r\nfrom django.http import HttpResponseRedirect\r\nfrom django.shortcuts import render, redirect\r\n\r\nfrom .forms import AddNewsForm, TagsForm\r\nfrom main.models import NewsModel, TagsModel\r\n\r\n\r\ndef addnews(request, news_id=None):\r\n    context = {}\r\n    if news_id:\r\n        instance = NewsModel.objects.get(pk=news_id)\r\n        form = AddNewsForm(instance=instance)\r\n    else:\r\n        instance = None\r\n        form = AddNewsForm()\r\n    if request.method == 'POST':\r\n        form = AddNewsForm(request.POST, request.FILES, instance=instance)\r\n        if form.is_valid():\r\n            if id is None:\r\n                news_entry = form.save(commit=False)\r\n                news_entry.autor = request.user\r\n                news_entry.save()\r\n                form.save_m2m()\r\n            else:\r\n                form.save()\r\n        url_referer = request.session['url_referer']\r\n        return HttpResponseRedirect(url_referer)\r\n    request.session['url_referer'] = request.META.get('HTTP_REFERER')\r\n    context['form'] = form\r\n    context['news'] = instance\r\n    return render(request, 'contentmanagment/addnews.html', context)\r\n\r\n\r\ndef newschange(request):\r\n    newslist = NewsModel.objects.filter(autor=request.user).order_by('-date_pub')\r\n    context = {'newslist': newslist}\r\n    return render(request, 'contentmanagment/newslist.html', context)\r\n\r\n\r\ndef removenews(request, news_id):\r\n    NewsModel.objects.filter(id=news_id).delete()\r\n    return redirect('contentmanagment:news-list', permanent=True)\r\n\r\n\r\ndef tags(request, id=None):\r\n    tags_news = TagsModel.objects.all()\r\n    if id is not None:\r\n        instance = TagsModel.objects.get(pk=id)\r\n        form = TagsForm(instance=instance)\r\n    else:\r\n        form = TagsForm()\r\n    if request.method == 'POST':\r\n        if id is not None:\r\n            instance = TagsModel.objects.get(pk=id)\r\n            form = TagsForm(request.POST, instance=instance)\r\n        else:\r\n            form = TagsForm(request.POST)\r\n        if form.is_valid():\r\n            form.save()\r\n            return redirect('contentmanagment:tags', permanent=True)\r\n    context = {\r\n        'tags': tags_news,\r\n        'form': form,\r\n        'id': id,\r\n    }\r\n    return render(request, 'contentmanagment/tags.html', context)\r\n\r\n\r\ndef moderation(request):\r\n    print(request.POST)\r\n    return None\r\n\r\n\r\ndef administratenews(request):\r\n    paginator = Paginator(NewsModel.objects.all().order_by('-date_pub'), 20)\r\n    page_number = request.GET.get('page')\r\n    newslist = paginator.get_page(page_number)\r\n    context = {'newslist': newslist}\r\n    return render(request, 'contentmanagment/adminlist.html', context)\r\n\r\n\r\ndef removetag(request, id=None):\r\n    if id is not None:\r\n        TagsModel.objects.filter(id=id).delete()\r\n        return redirect('contentmanagment:tags', permanent=True)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/RTK_study/contentmanagment/views.py b/RTK_study/contentmanagment/views.py
--- a/RTK_study/contentmanagment/views.py	(revision 1b2ddbd14ae4620d006cede0b324d3072512c177)
+++ b/RTK_study/contentmanagment/views.py	(date 1701995949135)
@@ -5,7 +5,7 @@
 from django.shortcuts import render, redirect
 
 from .forms import AddNewsForm, TagsForm
-from main.models import NewsModel, TagsModel
+from main.models import NewsModel, TagsModel, ImagesModel
 
 
 def addnews(request, news_id=None):
@@ -24,8 +24,12 @@
                 news_entry.autor = request.user
                 news_entry.save()
                 form.save_m2m()
+                for img in request.FILES.getlist('image_field'):
+                    ImagesModel.objects.create(news=news_entry, image=img, description=img.name)
             else:
-                form.save()
+                news_entry = form.save()
+                for img in request.FILES.getlist('image_field'):
+                    ImagesModel.objects.create(news=news_entry, image=img, description=img.name)
         url_referer = request.session['url_referer']
         return HttpResponseRedirect(url_referer)
     request.session['url_referer'] = request.META.get('HTTP_REFERER')
Index: RTK_study/main/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.contrib.auth import get_user_model\r\nfrom django.db import models\r\nfrom django.urls import reverse\r\nfrom django.utils.translation import gettext as _\r\n\r\n\r\nUser = get_user_model()\r\nclass TagsModel(models.Model):\r\n    description = models.CharField(max_length=100, blank=True)\r\n\r\n    class Meta:\r\n        verbose_name_plural = 'Тэги новостей'\r\n\r\n    def __str__(self):\r\n        return self.description\r\n\r\n    def get_absolute_url(self):\r\n        return reverse('contentmanagment:tags', kwargs={'id': self.id})\r\n\r\n\r\nclass NewsModel(models.Model):\r\n    tags = models.ManyToManyField('TagsModel',blank=True, related_name='Тэги')\r\n    autor = models.ForeignKey(User, on_delete=models.PROTECT)\r\n    name = models.CharField(max_length=150, blank=True)\r\n    mainImage = models.ImageField(upload_to='news/%Y%m%d-%H%M/', max_length=200)\r\n    description = models.TextField(blank=True)\r\n    date_pub = models.DateTimeField(auto_now=True)\r\n    show_news = models.BooleanField(default=True)\r\n\r\n    class Meta:\r\n        verbose_name_plural = 'Новости'\r\n\r\n    def __str__(self):\r\n        return self.name\r\n\r\n    def get_absolute_url(self):\r\n        return reverse('main:newsFull', kwargs={'id': self.id})\r\n\r\n\r\nclass NewsCommentsModel(models.Model):\r\n    date_comment = models.DateTimeField(auto_now=True)\r\n    user = models.ForeignKey(User, on_delete=models.PROTECT)\r\n    news = models.ForeignKey(NewsModel, on_delete=models.CASCADE)\r\n    text = models.TextField(max_length=10000, blank=True)\r\n    show_comment = models.BooleanField(default=True)\r\n\r\n\r\nclass ContactModel(models.Model):\r\n    date_message = models.DateTimeField(auto_now=True)\r\n    sender = models.TextField(max_length=100, blank=False)\r\n    contact = models.TextField(max_length=100, blank=False)\r\n    message = models.TextField(max_length=10000, blank=False)\r\n\r\n    class Meta:\r\n        verbose_name_plural = 'Сообщения для администрации'\r\n\r\n    def __str__(self):\r\n        return self.contact\r\n\r\n    def get_absolute_url(self):\r\n        return reverse('main:messagedetail', kwargs={\"pk\": self.pk})\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/RTK_study/main/models.py b/RTK_study/main/models.py
--- a/RTK_study/main/models.py	(revision 1b2ddbd14ae4620d006cede0b324d3072512c177)
+++ b/RTK_study/main/models.py	(date 1701995949237)
@@ -59,3 +59,15 @@
 
     def get_absolute_url(self):
         return reverse('main:messagedetail', kwargs={"pk": self.pk})
+
+
+class ImagesModel(models.Model):
+    news = models.ForeignKey(NewsModel, on_delete=models.CASCADE)
+    image = models.ImageField(upload_to='news/%Y%m%d/', max_length=200)
+    description = models.CharField(max_length=200, blank=True)
+
+    class Meta:
+        verbose_name_plural = 'Медиа-материалы'
+
+    def __str__(self):
+        return self.description
Index: RTK_study/main/admin.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.contrib import admin\r\nfrom .models import *\r\n\r\n\r\nclass TagsAdmin(admin.ModelAdmin):\r\n    list_display = ['description']\r\n    list_filter = ['description']\r\n    search_fields = ['description']\r\n\r\n\r\nclass NewsAdmin(admin.ModelAdmin):\r\n    list_display = ['name', 'autor', 'date_pub', 'show_news']\r\n    list_filter = ['name', 'autor', 'date_pub', 'show_news']\r\n    autocomplete_fields = ['tags']\r\n    search_fields = ['name', 'autor__username', 'autor__last_name']\r\n\r\n\r\nclass ContactAdmin(admin.ModelAdmin):\r\n    list_display = ['date_message', 'sender', 'contact', 'message']\r\n\r\n\r\nadmin.site.register(TagsModel, TagsAdmin)\r\nadmin.site.register(NewsModel, NewsAdmin)\r\nadmin.site.register(ContactModel, ContactAdmin)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/RTK_study/main/admin.py b/RTK_study/main/admin.py
--- a/RTK_study/main/admin.py	(revision 1b2ddbd14ae4620d006cede0b324d3072512c177)
+++ b/RTK_study/main/admin.py	(date 1701995949236)
@@ -22,3 +22,4 @@
 admin.site.register(TagsModel, TagsAdmin)
 admin.site.register(NewsModel, NewsAdmin)
 admin.site.register(ContactModel, ContactAdmin)
+admin.site.register(ImagesModel)
Index: RTK_study/main/forms.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django import forms\r\nfrom django.contrib.auth.forms import AuthenticationForm, UserCreationForm, UserChangeForm, PasswordChangeForm\r\n\r\nfrom .models import NewsCommentsModel, ContactModel\r\n\r\n\r\nclass AddCommentForm(forms.ModelForm):\r\n    class Meta:\r\n        model = NewsCommentsModel\r\n        fields = ['text']\r\n\r\n        widgets = {\r\n            'text': forms.Textarea(attrs={'class': 'form-control', 'rows': '3'}),\r\n        }\r\n\r\n        labels = {\r\n            'text': 'Текст комментария',\r\n        }\r\n\r\n\r\nclass ContactForm(forms.ModelForm):\r\n    class Meta:\r\n        model = ContactModel\r\n        fields = ['sender', 'contact', 'message']\r\n        widgets = {\r\n            'sender': forms.TextInput(),\r\n            'contact': forms.TextInput(),\r\n            'message': forms.Textarea(attrs={'rows': '5'}),\r\n        }\r\n        labels = {\r\n            'sender': 'Представьтесь пожалуйста',\r\n            'contact': 'Укажите данные, по которым можно с вами связаться',\r\n            'message': 'Текст сообщения'\r\n        }\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/RTK_study/main/forms.py b/RTK_study/main/forms.py
--- a/RTK_study/main/forms.py	(revision 1b2ddbd14ae4620d006cede0b324d3072512c177)
+++ b/RTK_study/main/forms.py	(date 1701995949236)
@@ -1,6 +1,5 @@
 from django import forms
 from django.contrib.auth.forms import AuthenticationForm, UserCreationForm, UserChangeForm, PasswordChangeForm
-
 from .models import NewsCommentsModel, ContactModel
 
 
Index: RTK_study/contentmanagment/forms.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django import forms\r\nfrom main.models import NewsModel, TagsModel\r\nfrom django_select2.forms import Select2MultipleWidget, Select2Widget\r\n\r\n\r\nclass AddNewsForm(forms.ModelForm):\r\n\r\n    class Meta:\r\n        model = NewsModel\r\n        fields = ['name', 'mainImage', 'description', 'tags', 'show_news']\r\n\r\n        widgets = {\r\n            'name': forms.TextInput(attrs={'class': 'form-control'}),\r\n            'mainImage': forms.ClearableFileInput(attrs={'class': 'form-control'}),\r\n            'description': forms.Textarea(attrs={'class': 'form-control', 'rows': '5'}),\r\n            'tags': Select2MultipleWidget(),\r\n            'show_news': forms.CheckboxInput()\r\n        }\r\n\r\n        labels = {\r\n            'name': 'Название',\r\n            'mainImage': 'Основное изображение',\r\n            'description': 'Текст новости',\r\n            'tags': 'Тэги новостей',\r\n            'show_news': 'Отображать новость'\r\n        }\r\n\r\n\r\nclass TagsForm(forms.ModelForm):\r\n    class Meta:\r\n        model = TagsModel\r\n        fields = ['description']\r\n        widgets = {\r\n            'description': forms.TextInput(attrs={'class': 'form-control'}),\r\n        }\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/RTK_study/contentmanagment/forms.py b/RTK_study/contentmanagment/forms.py
--- a/RTK_study/contentmanagment/forms.py	(revision 1b2ddbd14ae4620d006cede0b324d3072512c177)
+++ b/RTK_study/contentmanagment/forms.py	(date 1701995949135)
@@ -3,7 +3,26 @@
 from django_select2.forms import Select2MultipleWidget, Select2Widget
 
 
+class MultipleFileInput(forms.ClearableFileInput):
+    allow_multiple_selected = True
+
+
+class MultipleFileField(forms.FileField):
+    def __init__(self, *args, **kwargs):
+        kwargs.setdefault("widget", MultipleFileInput())
+        super().__init__(*args, **kwargs)
+
+    def clean(self, data, initial=None):
+        single_file_clean = super().clean
+        if isinstance(data, (list, tuple)):
+            result = [single_file_clean(d, initial) for d in data]
+        else:
+            result = single_file_clean(data, initial)
+        return result
+
+
 class AddNewsForm(forms.ModelForm):
+    image_field = MultipleFileField(label = 'Медиа-материалы')
 
     class Meta:
         model = NewsModel
Index: .idea/rtk_course.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module type=\"PYTHON_MODULE\" version=\"4\">\r\n  <component name=\"NewModuleRootManager\">\r\n    <content url=\"file://$MODULE_DIR$\">\r\n      <excludeFolder url=\"file://$MODULE_DIR$/venv\" />\r\n    </content>\r\n    <orderEntry type=\"jdk\" jdkName=\"Python 3.11 (rtk_course)\" jdkType=\"Python SDK\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/rtk_course.iml b/.idea/rtk_course.iml
--- a/.idea/rtk_course.iml	(revision 1b2ddbd14ae4620d006cede0b324d3072512c177)
+++ b/.idea/rtk_course.iml	(date 1701995949133)
@@ -4,7 +4,7 @@
     <content url="file://$MODULE_DIR$">
       <excludeFolder url="file://$MODULE_DIR$/venv" />
     </content>
-    <orderEntry type="jdk" jdkName="Python 3.11 (rtk_course)" jdkType="Python SDK" />
+    <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
   </component>
 </module>
\ No newline at end of file
