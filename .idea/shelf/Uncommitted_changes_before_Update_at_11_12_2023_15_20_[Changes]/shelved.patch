Index: RTK_study/main/templates/main/newFull.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{% extends  'base.html' %}\r\n{% load static %}\r\n{% load bootstrap5 %}\r\n{% block title %}\r\n    Подробно о новости\r\n{% endblock title %}\r\n\r\n{% block content %}\r\n    <div class=\"row\">\r\n        <div class=\"d-none d-xl-block col-xl-3 p-3\">\r\n            <h6 class=\"text-center text-secondary\">\r\n                Последние новости:\r\n            </h6>\r\n            <ul class=\"list-group list-group-flush\">\r\n                {% for news in last_news %}\r\n                    <li class=\"list-group-item\"><a href=\"{% url 'main:newsFull' news.id %}\" class=\"text-muted stretched-link text-decoration-none\">{{news.name}}</a></li>\r\n                {% endfor %}\r\n            </ul>\r\n        </div>\r\n        <div class=\"col-10 col-xl-8 mx-auto p-3\">\r\n            <h1 class=\"text-center\">\r\n                {{ news.name }}\r\n            </h1>\r\n            <h6 class=\"text-end text-secondary py-3\">\r\n                Опубликовано: {{ news.date_pub }}, автор {{ news.autor.last_name }} {{ news.autor.first_name }}\r\n            </h6>\r\n            <!-- Carousel -->\r\n            {% if news.imagesmodel_set.all %}\r\n                <div id=\"carouselExampleControls\" class=\"carousel carousel-dark slide col-10 col-md-8 mx-auto pb-3\" data-bs-ride=\"carousel\">\r\n                    <div class=\"carousel-inner\">\r\n                        {% for image in news.imagesmodel_set.all %}\r\n                            <div class=\"carousel-item {% if forloop.counter == 1 %}active{% endif %}\">\r\n                                <img src=\"{{ image.image.url }}\" class=\"d-block mx-auto rounded-2\" style=\"height: 400px; width: auto;\" alt=\"{{ image.description }}\">\r\n                            </div>\r\n                        {% endfor %}\r\n                    </div>\r\n                 <button class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleControls\" data-bs-slide=\"prev\">\r\n                     <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                        <span class=\"visually-hidden\">Previous</span>\r\n                 </button>\r\n                 <button class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleControls\" data-bs-slide=\"next\">\r\n                        <span class=\"carousel-control-next-icon text-secondary\" aria-hidden=\"true\"></span>\r\n                        <span class=\"visually-hidden\">Next</span>\r\n                    </button>\r\n                </div>\r\n            {% endif %}\r\n            <!-- end -->\r\n            {% for paragraph in news.description %}\r\n                <p class=\"py-1 my-1\" style=\"text-indent: 20px;\">\r\n                    {{ paragraph }}\r\n                </p>\r\n            {% endfor %}\r\n\r\n           <div>\r\n               <script>\r\n                    function sendModeration()\r\n                        {\r\n                            document.getElementById(\"moderation\").submit();\r\n                        }\r\n                </script>\r\n                {% for comment in comments %}\r\n                    <hr class=\"mt-3\">\r\n                    <p class=\"text-secondary\">{{ comment.user__last_name }} {{ comment.user__first_name }}:</p>\r\n                    <p class=\"text-start\">{{ comment.text }}</p>\r\n                    <p class=\"text-secondary text-end\">Дата: {{ comment.date_comment }}</p>\r\n                    {% if perms.newscommentsmodel.change_newscommentsmodel %}<p class=\"text-secondary text-end\">Показывать комментарий: <input class=\"form-check-input\" type=\"checkbox\" {% if comment.show_comment %}checked{% endif %} onclick=\"sendModeration()\"></p>{% endif %}\r\n                {% endfor %}\r\n           </div>\r\n           {% if perms.newscommentsmodel.add_newscommentsmodel %}\r\n           <hr class=\"mt-5\">\r\n           <form method=\"POST\" class=\"py-2\">\r\n                {% csrf_token %}\r\n                {% bootstrap_form form %}\r\n                {% bootstrap_button \"Добавить комментарий\" button_type=\"submit\" button_class=\"btn-success float-end\" %}\r\n           </form>\r\n           {% endif %}\r\n        </div>\r\n\r\n    </div>\r\n{% endblock content %}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/RTK_study/main/templates/main/newFull.html b/RTK_study/main/templates/main/newFull.html
--- a/RTK_study/main/templates/main/newFull.html	(revision 230eb7605e81b049db998e7067951b0045b5afdc)
+++ b/RTK_study/main/templates/main/newFull.html	(date 1702275317595)
@@ -51,19 +51,14 @@
                 </p>
             {% endfor %}
 
-           <div>
-               <script>
-                    function sendModeration()
-                        {
-                            document.getElementById("moderation").submit();
-                        }
-                </script>
+            <div>
+
                 {% for comment in comments %}
-                    <hr class="mt-3">
-                    <p class="text-secondary">{{ comment.user__last_name }} {{ comment.user__first_name }}:</p>
-                    <p class="text-start">{{ comment.text }}</p>
-                    <p class="text-secondary text-end">Дата: {{ comment.date_comment }}</p>
-                    {% if perms.newscommentsmodel.change_newscommentsmodel %}<p class="text-secondary text-end">Показывать комментарий: <input class="form-check-input" type="checkbox" {% if comment.show_comment %}checked{% endif %} onclick="sendModeration()"></p>{% endif %}
+                        <hr class="mt-3">
+                        <p class="text-secondary">{{ comment.user__last_name }} {{ comment.user__first_name }}:</p>
+                        <p class="text-start">{{ comment.text }}</p>
+                        <p class="text-secondary text-end">Дата: {{ comment.date_comment }}</p>
+                        {% if perms.newscommentsmodel.change_newscommentsmodel %}<p class="text-secondary text-end">Показывать комментарий: <input class="form-check-input" type="checkbox" {% if comment.show_comment %}checked{% endif %} id="checkbox_{{ comment.id }}" data-idcomment="{{ comment.id }}"></p>{% endif %}
                 {% endfor %}
            </div>
            {% if perms.newscommentsmodel.add_newscommentsmodel %}
@@ -75,6 +70,16 @@
            </form>
            {% endif %}
         </div>
-
+                <script>
+                    $(':checkbox').change(function() {
+                        var idcomment = $(this).data('idcomment');
+                        var statuscomment = this.checked;
+                        $.ajax({
+                            method: 'post',
+                            url: "{% url 'main:moderation' %}",
+                            data: { csrfmiddlewaretoken: '{{ csrf_token }}', comment: idcomment, status: statuscomment },
+                        })
+                    });
+                </script>
     </div>
 {% endblock content %}
Index: RTK_study/main/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import datetime\r\nfrom django.db.models import Q, Value, F, CharField\r\nfrom django.db.models import Count\r\nfrom django.db.models.functions import Concat\r\nfrom django.http import HttpResponse\r\nfrom django.shortcuts import render, redirect\r\nfrom .models import TagsModel, NewsCommentsModel, NewsModel, ContactModel\r\nfrom django.contrib.auth import get_user_model\r\nfrom django.core.paginator import Paginator\r\nfrom .forms import AddCommentForm, ContactForm\r\nfrom django.views.generic import ListView, DetailView\r\n\r\n\r\nUser=get_user_model()\r\ndef about(request):\r\n    return render(request, 'main/about.html')\r\n\r\n\r\ndef contacts(request):\r\n    if request.method == 'POST':\r\n        form = ContactForm(request.POST)\r\n        if form.is_valid():\r\n            form.save()\r\n    if request.user.is_authenticated:\r\n        form = ContactForm(initial={\"sender\": request.user.get_full_name(), \"contact\": request.user.email})\r\n    else:\r\n        form = ContactForm()\r\n    return render(request, 'main/contacts.html', {'form': form})\r\n\r\n\r\nclass ContactMessages(ListView):\r\n    model = ContactModel\r\n    template_name = 'main/contactmessages.html'\r\n    context_object_name = 'messages'\r\n    paginate_by = 20\r\n\r\n\r\nclass ContactMessageDetail(DetailView):\r\n    model = ContactModel\r\n    template_name = 'main/contactmessagedetail.html'\r\n    context_object_name = 'message'\r\n\r\n\r\ndef news(request):\r\n    if request.method == 'POST':\r\n        search_string = request.POST.get('search_string')\r\n        paginator = Paginator(NewsModel.objects.filter(Q(show_news = True) &\r\n                                                       (\r\n                                                            Q(name__icontains=search_string) |\r\n                                                            Q(name__icontains=search_string) |\r\n                                                            Q(autor__last_name__icontains=search_string) |\r\n                                                            Q(autor__first_name__icontains=search_string) |\r\n                                                            Q(tags__description__icontains=search_string)\r\n                                                       )\r\n        ).annotate(comments=Count('newscommentsmodel', distinct=True),\r\n                    newsautor = Concat(F('autor__last_name'), F('autor__first_name'), output_field=CharField())).order_by('-date_pub')[:600], 12)\r\n        page_number = request.GET.get('page')\r\n        newslist = paginator.get_page(page_number)\r\n        context = {'newslist': newslist}\r\n    else:\r\n        paginator = Paginator(NewsModel.objects.filter(show_news = True).annotate(comments=Count('newscommentsmodel', distinct=True),\r\n                                                         newsautor = Concat(F('autor__last_name'), F('autor__first_name'), output_field=CharField())).order_by('-date_pub')[:600], 12)\r\n        page_number = request.GET.get('page')\r\n        newslist = paginator.get_page(page_number)\r\n        context = {'newslist': newslist}\r\n    return render(request, 'main/news.html', context)\r\n\r\n\r\ndef new_full(request, id):\r\n    news_full = NewsModel.objects.select_related('autor').get(pk=id)\r\n    comments = news_full.newscommentsmodel_set.select_related('user').values('date_comment', 'text', 'user__first_name', 'user__last_name', 'show_comment')\r\n    news_full.description = news_full.description.split('\\r\\n')\r\n    last_news = NewsModel.objects.order_by('-date_pub').all().values('id', 'name')\r\n    form = AddCommentForm()\r\n    if request.method == 'POST':\r\n        form = AddCommentForm(request.POST)\r\n        if form.is_valid():\r\n            comment_entry = form.save(commit=False)\r\n            comment_entry.user = request.user\r\n            comment_entry.news = news_full\r\n            comment_entry.save()\r\n            form = AddCommentForm()\r\n    context = {\r\n        'last_news': last_news,\r\n        'news': news_full,\r\n        'form': form,\r\n        'comments': comments,\r\n        }\r\n    return render(request, 'main/newFull.html', context)\r\n\r\n\r\ndef handler404(request, exception):\r\n    return render(request, '404.html')\r\n\r\n\r\ndef handler403(request, exception):\r\n    return render(request, '403.html')\r\n\r\ndef moderation(request):\r\n    print(request.POST)\r\n    return HttpResponse(None)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/RTK_study/main/views.py b/RTK_study/main/views.py
--- a/RTK_study/main/views.py	(revision 230eb7605e81b049db998e7067951b0045b5afdc)
+++ b/RTK_study/main/views.py	(date 1702274155767)
@@ -68,7 +68,7 @@
 
 def new_full(request, id):
     news_full = NewsModel.objects.select_related('autor').get(pk=id)
-    comments = news_full.newscommentsmodel_set.select_related('user').values('date_comment', 'text', 'user__first_name', 'user__last_name', 'show_comment')
+    comments = news_full.newscommentsmodel_set.select_related('user').values('id', 'date_comment', 'text', 'user__first_name', 'user__last_name', 'show_comment')
     news_full.description = news_full.description.split('\r\n')
     last_news = NewsModel.objects.order_by('-date_pub').all().values('id', 'name')
     form = AddCommentForm()
@@ -97,5 +97,12 @@
     return render(request, '403.html')
 
 def moderation(request):
-    print(request.POST)
-    return HttpResponse(None)
+    print(request)
+    if request.method == 'POST':
+        id = request.POST['comment']
+        if request.POST['status'] == 'true':
+            status = True
+        else:
+            status = False
+        NewsCommentsModel.objects.filter(pk=id).update(show_comment=status)
+        return HttpResponse(None)
